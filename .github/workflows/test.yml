name: OpenWrt 固件自动云编译

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id

    name: ${{matrix.target}} 固件云编译
    strategy:
      fail-fast: false
      matrix:
        target: [K2P]

    steps:
      - name: 检出源码
        uses: actions/checkout@main
      
      - name: 环境变量配置
        run: |
          source ${{ github.workspace }}/config/${{matrix.target}}/settings.ini
          echo "REPO_URL=$REPO_URL" >> $GITHUB_ENV
          echo "REPO_BRANCH=$REPO_BRANCH" >> $GITHUB_ENV
          echo "SSH_ACTIONS=$SSH_ACTIONS" >> $GITHUB_ENV
          echo "UPLOAD=$UPLOAD" >> $GITHUB_ENV
          echo "RELEASE=$RELEASE" >> $GITHUB_ENV
          echo "WECHAT=$WECHAT" >> $GITHUB_ENV
          echo "TZ=$TZ" >> $GITHUB_ENV
      
      - name: 初始化编译环境
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /usr/lib/jvm /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "${{ env.TZ }}"

      - name: 拉取源码
        run: |
          cd ${{ github.workspace }}
          git clone --depth 1 ${{ env.REPO_URL }} -b ${{ env.REPO_BRANCH }} openwrt
          useVersionInfo=$(git show -s --date=short --format="编译前的最后一次[➦主源码](https://github.com/coolsnowwolf/lede)更新记录:<br/>更新人: %an<br/>更新时间: %cd<br/>更新内容: %s<br/>哈希值: %H")
          echo "useVersionInfo=$useVersionInfo" >> $GITHUB_ENV
          echo "RELEASE_NAME=$(TZ=UTC-8 date +"%Y年%m月%d号-%H点%M分")" >> $GITHUB_ENV
          echo "RELEASE_TAG=$(TZ=UTC-8 date +"%Y%m%d-%H%M")" >> $GITHUB_ENV
      
      - name: 执行自定义脚本
        run: |
          cd ${{ github.workspace }}/openwrt

          if [ -f ${{ github.workspace }}/${{matrix.target}}/diy1.sh ]; then
            chmod +x ${{ github.workspace }}/config/${{matrix.target}}/diy1.sh
            /bin/bash ${{ github.workspace }}/config/${{matrix.target}}/diy1.sh
          fi
      
      - name: 更新feeds
        run: |
          cd ${{ github.workspace }}/openwrt

          ./scripts/feeds clean
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      
      - name: 补丁、自定义文件及脚本
        run: |
          cd ${{ github.workspace }}/openwrt

          if [ -n "$(ls -A "${{ github.workspace }}/config/${{matrix.target}}/patches" 2>/dev/null)" ]; then
            find "${{ github.workspace }}/config/${{matrix.target}}/patches" -type f -name '*.patch' -print0 | sort -z | xargs -I % -t -0 -n 1 sh -c "cat '%'  | patch -d './' -p0 --forward" || true
          fi

          if [ -n "$(ls -A "${{ github.workspace }}/config/${{matrix.target}}/files" 2>/dev/null)" ]; then
            cp -rf ${{ github.workspace }}/config/${{matrix.target}}/files ${{ github.workspace }}/openwrt/files
          fi

          if [ -n "$(ls -A "${{ github.workspace }}/config/${{matrix.target}}/diy" 2>/dev/null)" ]; then
            cp -Rf ${{ github.workspace }}/config/${{matrix.target}}/diy/* ${{ github.workspace }}/openwrt/
          fi

          if [ -f ${{ github.workspace }}/config/${{matrix.target}}/diy2.sh ]; then
            chmod +x ${{ github.workspace }}/config/${{matrix.target}}/diy2.sh
            /bin/bash ${{ github.workspace }}/config/${{matrix.target}}/diy2.sh
          fi

      - name: 载入配置
        run: |
          cd ${{ github.workspace }}/openwrt
          rm -f ${{ github.workspace }}/openwrt/.config
          mv ${{ github.workspace }}/config/${{matrix.target}}/.config ${{ github.workspace }}/openwrt/
          make defconfig

      - name: 开启SSH通道
        if: env.SSH_ACTIONS == 'true' || contains(github.event.action, 'ssh')
        uses: P3TERX/debugger-action@main

      - name: 下载依赖
        run: |
          cd ${{ github.workspace }}/openwrt
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;
      
      - name: 编译固件
        id: compile
        run: |
          cd ${{ github.workspace }}/openwrt
          echo -e "$(nproc) thread compile"
          make -j$(nproc) V=s 2>&1 | tee -a build.log || make -j1 V=s 2>&1 | tee -a build.log
          ls -la ${{ github.workspace }}/openwrt/bin/targets/*/*/
          echo "::set-output name=status::success"

      - name: 整理文件
        id: organizer
        if: steps.compile.outputs.status == 'success' && !cancelled()
        run: |
          mkdir -p ${{ github.workspace }}/dist/Packages
          cd ${{ github.workspace }}/openwrt/bin/targets/*/*
          find -name "*.buildinfo*" | xargs -i mv -f {} ${{ github.workspace }}/dist/
          find -name "*.bin*" | xargs -i mv -f {} ${{ github.workspace }}/dist/
          find -name "*.manifest*" | xargs -i mv -f {} ${{ github.workspace }}/dist/
          find -name "*.gz*" | xargs -i mv -f {} ${{ github.workspace }}/dist/

          cp -r -f ${{ github.workspace }}/openwrt/bin/packages/*/*/*.ipk ${{ github.workspace }}/dist/Packages/
          cp -r -f ${{ github.workspace }}/openwrt/bin/targets/*/*/packages/*.ipk ${{ github.workspace }}/dist/Packages/

          rm -f ${{ github.workspace }}/dist/Packages.gz

          cd ${{ github.workspace }}

          if [ -f ${{ github.workspace }}/config/${{matrix.target}}/organizer.sh ]; then
            chmod +x ${{ github.workspace }}/config/${{matrix.target}}/organizer.sh
            /bin/bash ${{ github.workspace }}/config/${{matrix.target}}/organizer.sh
          fi

          cd ${{ github.workspace }}/dist
          tar -czf Packages.tar.gz Packages
          rm -rf Packages
          sha256sum `ls -1 | sort` > sha256sums

          echo "::set-output name=status::success"
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV
      
      - name: 上传奶牛快传及webtransfer
        if: steps.organizer.outputs.status == 'success' && env.UPLOAD == 'true' && !cancelled()
        run: |
          curl -fsSL git.io/file-transfer | sh
          ./transfer cow --block 2621440 -s -p 64 --no-progress ${{ env.FIRMWARE }} 2>&1 | tee cowtransfer.log
          COWTRANSFER_URL=$(cat cowtransfer.log | grep https | cut -f3 -d" ")
          echo "COWTRANSFER_URL=$COWTRANSFER_URL" >> $GITHUB_ENV
          curl -fsSL git.io/file-transfer | sh
          ./transfer wet -s -p 16 --no-progress ${{ env.FIRMWARE }} 2>&1 | tee wetransfer.log
          WETRANSFER_URL=$(cat wetransfer.log | grep https | cut -f3 -d" ")
          echo "WETRANSFER_URL=$WETRANSFER_URL" >> $GITHUB_ENV
      
      - name: 版本发布
        if: steps.organizer.outputs.status == 'success' && env.RELEASE == 'true' && !cancelled()
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          name: ${{ env.RELEASE_NAME }}  ❤️ | ${{matrix.target}}-OpenWrt 自动编译
          tag_name: ${{ env.RELEASE_TAG }}
          body: |
            ☆ 源码来源: ${{ env.REPO_URL }}
            ☆ 源码分支: ${{ env.REPO_BRANCH }}

            🚀 奶牛快传: ${{ env.COWTRANSFER_URL }}
            🐤 WeTransfer: ${{ env.WETRANSFER_URL }}

            ✨ 当前源码版本:

            ${{ env.useVersionInfo }}
          files: ${{ github.workspace }}/dist/*

      - name: 微信通知
        if: steps.organizer.outputs.status == 'success' && env.WECHAT == 'true' && !cancelled()
        run: |
          [ ${{ steps.organizer.outputs.status}} == 'success' ] && curl https://sc.ftqq.com/${{ secrets.SCKEY }}.send?text=🎉${{ matrix.target }}编译完成😋|| curl https://sc.ftqq.com/${{ secrets.SCKEY }}.send?text=❌${{ matrix.target }}编译失败😂